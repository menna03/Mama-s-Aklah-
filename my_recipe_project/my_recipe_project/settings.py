"""
Django settings for my_recipe_project project.

Generated by 'django-admin startproject' using Django X.Y.Z.
For more information on this file, see
https://docs.djangoproject.com/en/X.Y/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/X.Y/ref/settings/
"""

from pathlib import Path
import os # For MEDIA_ROOT and STATICFILES_DIRS

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/X.Y/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Generate your own secret key for production.
# You can use an online generator or Python's secrets module.
from django.core.management.utils import get_random_secret_key
print(get_random_secret_key())
SECRET_KEY = 'get_random_secret_key()'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True # Set to False in production

ALLOWED_HOSTS = [] # Add your domain names and IP addresses here for production
                   # e.g., ['www.yourdomain.com', 'yourdomain.com']
                   # For development, if DEBUG=True, Django's runserver often handles this.
                   # If you use something like `python manage.py runserver 0.0.0.0:8000`,
                   # you might need to add 'localhost', '127.0.0.1', and your machine's local IP.


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'recipes_app.apps.RecipesAppConfig', # Or just 'recipes_app' if you don't have a custom AppConfig
    # Add other third-party apps here if needed
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware', # For CSRF protection
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'my_recipe_project.urls' # Points to your project-level urls.py

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            # os.path.join(BASE_DIR, 'templates') # Add this if you have a project-level templates directory
        ],
        'APP_DIRS': True, # This allows Django to find templates inside app directories (e.g., recipes_app/templates/)
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request', # Important for request object in templates
                'django.contrib.auth.context_processors.auth',   # Important for user object in templates
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'my_recipe_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/X.Y/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3', # Database file will be created in the project root
    }
}
# For other databases like PostgreSQL or MySQL, you'd configure them here.


# Password validation
# https://docs.djangoproject.com/en/X.Y/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/X.Y/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Cairo' # Updated to your specified location

USE_I18N = True

USE_TZ = True # Recommended to keep True for timezone-aware datetimes


# Static files (CSS, JavaScript, Images served by Django)
# https://docs.djangoproject.com/en/X.Y/howto/static-files/

STATIC_URL = '/static/' # URL prefix for static files

# Additional locations of static files (project-level static files)
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static'), # If you have a project-level 'static' folder
# ]

# For production, you'll typically use STATIC_ROOT for collectstatic
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles_production')


# Media files (User-uploaded files like recipe images)
# https://docs.djangoproject.com/en/X.Y/topics/files/

MEDIA_URL = '/media/' # URL prefix for media files
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') # Directory where uploaded media files will be stored
                                             # Make sure this directory exists and is writable by the Django process.

# Default primary key field type
# https://docs.djangoproject.com/en/X.Y/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Authentication settings
# LOGIN_URL = 'login_page_view_name' # The name of the URL pattern for your login page
# If you use Django's built-in LoginView, it might be '/accounts/login/' by default
# or you can set it to your custom login page's URL name.

LOGIN_REDIRECT_URL = '/'  # URL to redirect to after successful login if no 'next' parameter is provided.
                          # Could be 'home_view_name' or 'main_dashboard_view_name' depending on logic.

LOGOUT_REDIRECT_URL = '/' # URL to redirect to after logout.
                           # Could be 'home_view_name' or 'login_page_view_name'.

# If you are using a custom user model, uncomment and set this:
# AUTH_USER_MODEL = 'your_app_name.YourCustomUserModel'